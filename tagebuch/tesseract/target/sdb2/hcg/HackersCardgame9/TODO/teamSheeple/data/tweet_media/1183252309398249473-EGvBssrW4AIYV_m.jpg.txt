@ Observer Pattern

Subject
+observerCollection

+notify()

+registerObserver(observer)
+unregisterObserver(observer)
+notifyObservers()

notifyObservers()

> for observer in observerCollection
ConcreteObserverA call observer.notify()
+notify()
UNIFIED ~>

ConcreteObserverB MODELING
Fnotify() LANGUAGE ~

Inventor Erich Gamma, Richard Helm... ~1994

The observer pattern (also called listener
pattern) is a design pattern in software
development. It belongs to the category of
behavior patterns. In the programming
language Java it would be public interface
Observer and it would be used with
â€œimplements Observer" (needs exercise) It
does not mean "survaillance" its a
computer science Term.

Use Cases

To transfer changes to objects to a complete
structures that dependent on this object, ev.
an application with different views

