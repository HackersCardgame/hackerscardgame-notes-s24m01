*algorithm js

*algorithm js

21 function parseBoard(board)

{

counter = 0;
for(m:
for(n=0; n<9; n++)

if (board[m] [n]==0)
{

candidates = getCandidates(m, n, board)
var sum = 0;
for(c=0; c<10; c++)
sum+=candidates[c];
if(sum < 2)

counter+=3;
var speed = 100;
for (i = counter; i <= counter+2; i++) {
setTimeout(function(i, m, n, candidates) {
af (4%3!=0)

for(j=0; j<9; j++)
document .getElementById(fields[m][j]).style.backgroundColor = "white";
for(k=0; k<9; k++)
document .getElementById(fields[k][n]).style.backgroundColor = "white";

}

else

for(j=0; j<9; j++)
document . getElementById(fields[m][j]).style.backgroundColor = "cyan";
for(k=0; k<9; k++)
document . getElementById(fields[k][n]).style.backgroundColor = "cyan";

board[m] [n]=1*candidates[1]+2*candidates[2]+2*candidates[*]+4*candidates[4]+5*candidates[5]+
6*candidates[6]+/*candidates[ /]+8*candidates[®]+9*candidates[°];
document .getElementById(fields[m][n]).style.color="red";
drawBoard(board);
}, speed * i, i, m, n, candidates);

