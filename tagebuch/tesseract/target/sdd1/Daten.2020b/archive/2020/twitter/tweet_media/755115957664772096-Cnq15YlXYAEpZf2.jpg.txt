What precisely has changed in v197?

With systemd 197 we have added native support for a number of diferent naming policies into systemd/udevd proper and made a scheme similar to biosdevname's (but generally more powerful, and closer to
emel-interal device identification schemes) the default. The following different naming schemes for network interfaces are now supported by udev natively:

1, Names incorporating Firmware/BIOS provided index numbers for on-board devices (example: eno1)

2, Names incorporating Fimware/BIOS provided PCI Express hotplug slot index numbers (example: ens)
3. Names incorporating physicalgeographical location of the connector of the hardware (example: enp2s0)
4, Names incorporating the interfaces's MAC address (example: BAR78e7d1ea46da)

5. Classic, unpredictable kemel-native ethX naming (example: etho)

By default, systemd v197 will now name interfaces following policy 1) if that information from the firmware is applicable and available, faling back to 2) if that information from the firmware is applicable and
available, falling back to 3) if applicable, falling back to 5) in all other cases. Policy 4) is not used by default, but is available ifthe user chooses so.

This combined policy is only applied as last resort. That means, ifthe system has biosdevname installed, it will take precedence, Ifthe user has added udev rules which change the name of the kemel devices these
will take precedence too. Also, any distribution specific naming schemes generally take precedence.

Come again, what good does this do?

‘With this new scheme you now get:

Stable interface names across reboots
‘Stable interface names even when hardware is added or removed, i. no re-enumeration takes place
Stable interface names when kemels or drivers are updated/changed

Stable interface names even if you have to replace broken ethemet cards by new ones

FS gRB RMT IMU ROE gad rece gS fife iy hoki Acne aE
