@ Observer Pattern

( Subject

fF +observerCollection
+registerObserver(observer)

as +unregisterObserver(observer)
\ +notifyObservers() J

notifyObservers()

for observer in observerCollection
ConcreteObserverA call observer.notify()
+notify()
UNIFIED <>

ConcreteObserverB MODELING
| Concrete Observers |
MANGUAGE .

Inventor Erich Gamma, Richard Helm... ~1994
The observer pattern (also called listener
pattern) is a design pattern in software
development. It belongs to the category of
behavior patterns. In the programming
language Java it would be public interface
Observer and it would be used with
â€œimplements Observer" (needs exercise)

Use Cases
To transfer changes to objects to a complete

structures that dependent on this object, ev.
an application with different views

